{"ast":null,"code":"var _jsxFileName = \"/Users/amitkumar/Desktop/MERN/SportsFest/frontend/src/pages/EventRegistrationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport api from '../api'; // Your Axios instance or API configuration\nimport { useAuth } from '../context/AuthContext'; // Assuming you have an AuthContext for user data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventRegistrationPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    event\n  } = location.state || {}; // Get event details passed from the EventList\n  const {\n    user\n  } = useAuth(); // Get user info from AuthContext\n  const [teamName, setTeamName] = useState('');\n  const [teamMembers, setTeamMembers] = useState(Array(event === null || event === void 0 ? void 0 : event.teamSize).fill(''));\n  useEffect(() => {\n    // Check if user is logged in\n    if (!user) {\n      navigate('/login'); // Redirect to login if user is not logged in\n    }\n  }, [user, navigate]);\n  const handleIndividualRegister = async e => {\n    e.preventDefault();\n    if (!user) {\n      navigate('/login'); // Navigate to login page if not logged in\n      alert('You must be logged in to register.'); // Check if user is logged in\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token'); // Retrieve token from local storage\n      console.log(\"email=\", user.email);\n      await api.post(`/events/${event._id}/register/individual`, {\n        email: user.email\n      },\n      // Use user's email from AuthContext\n      {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Registration successful!');\n      navigate('/events'); // Redirect back to events list\n    } catch (error) {\n      alert('Registration failed: ' + error.message);\n    }\n  };\n  const handleTeamRegister = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token'); // Retrieve token from local storage\n      await api.post(`/events/${event._id}/register/team`, {\n        teamName,\n        members: teamMembers\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Team registration successful!');\n      navigate('/events'); // Redirect back to events list\n    } catch (error) {\n      alert('Registration failed: ' + error.message);\n    }\n  };\n  const handleTeamMemberChange = (index, value) => {\n    const updatedMembers = [...teamMembers];\n    updatedMembers[index] = value;\n    setTeamMembers(updatedMembers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: [(event === null || event === void 0 ? void 0 : event.eventType) === 'team' ? 'Team Registration' : 'Individual Registration', \" for \", event === null || event === void 0 ? void 0 : event.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), (event === null || event === void 0 ? void 0 : event.eventType) === 'individual' ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleIndividualRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }, this), \" \", user === null || user === void 0 ? void 0 : user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-4 w-full py-2 text-white font-bold rounded bg-indigo-600 hover:bg-indigo-700 focus:outline-none\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTeamRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"teamName\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Team Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"teamName\",\n        value: teamName,\n        onChange: e => setTeamName(e.target.value),\n        required: true,\n        className: \"mt-1 p-2 border border-gray-300 rounded w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-gray-700 mt-2\",\n        children: \"Team Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), teamMembers.map((member, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Member ${index + 1} Name`,\n        value: member,\n        onChange: e => handleTeamMemberChange(index, e.target.value),\n        className: \"mt-1 p-2 border border-gray-300 rounded w-full mb-1\",\n        required: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-4 w-full py-2 text-white font-bold rounded bg-indigo-600 hover:bg-indigo-700 focus:outline-none\",\n        children: \"Register Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(EventRegistrationPage, \"TJE/cr6V0Jlf3PcVaFDTzX/G7ww=\", false, function () {\n  return [useNavigate, useLocation, useAuth];\n});\n_c = EventRegistrationPage;\nexport default EventRegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"EventRegistrationPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","api","useAuth","jsxDEV","_jsxDEV","EventRegistrationPage","_s","navigate","location","event","state","user","teamName","setTeamName","teamMembers","setTeamMembers","Array","teamSize","fill","handleIndividualRegister","e","preventDefault","alert","token","localStorage","getItem","console","log","email","post","_id","headers","Authorization","error","message","handleTeamRegister","members","handleTeamMemberChange","index","value","updatedMembers","className","children","eventType","name","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","htmlFor","id","onChange","target","required","map","member","placeholder","_c","$RefreshReg$"],"sources":["/Users/amitkumar/Desktop/MERN/SportsFest/frontend/src/pages/EventRegistrationPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport api from '../api'; // Your Axios instance or API configuration\nimport { useAuth } from '../context/AuthContext'; // Assuming you have an AuthContext for user data\n\nconst EventRegistrationPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { event } = location.state || {}; // Get event details passed from the EventList\n  const { user } = useAuth(); // Get user info from AuthContext\n  const [teamName, setTeamName] = useState('');\n  const [teamMembers, setTeamMembers] = useState(Array(event?.teamSize).fill(''));\n\n  useEffect(() => {\n    // Check if user is logged in\n    if (!user) {\n      navigate('/login'); // Redirect to login if user is not logged in\n    }\n  }, [user, navigate]);\n\n  const handleIndividualRegister = async (e) => {\n    e.preventDefault();\n    if (!user) {\n      navigate('/login'); // Navigate to login page if not logged in\n      alert('You must be logged in to register.'); // Check if user is logged in\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('token'); // Retrieve token from local storage\n      console.log(\"email=\",user.email);\n      await api.post(\n        `/events/${event._id}/register/individual`,\n        { email: user.email }, // Use user's email from AuthContext\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      alert('Registration successful!');\n      navigate('/events'); // Redirect back to events list\n    } catch (error) {\n      alert('Registration failed: ' + error.message);\n    }\n  };\n\n  const handleTeamRegister = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token'); // Retrieve token from local storage\n      await api.post(\n        `/events/${event._id}/register/team`, \n        { teamName, members: teamMembers },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      alert('Team registration successful!');\n      navigate('/events'); // Redirect back to events list\n    } catch (error) {\n      alert('Registration failed: ' + error.message);\n    }\n  };\n\n  const handleTeamMemberChange = (index, value) => {\n    const updatedMembers = [...teamMembers];\n    updatedMembers[index] = value;\n    setTeamMembers(updatedMembers);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 mt-8\">\n      <h1 className=\"text-2xl font-bold mb-4\">\n        {event?.eventType === 'team' ? 'Team Registration' : 'Individual Registration'} for {event?.name}\n      </h1>\n\n      {event?.eventType === 'individual' ? (\n        <form onSubmit={handleIndividualRegister}>\n          <p><strong>Email:</strong> {user?.email}</p> {/* Display the logged-in user's email */}\n          <button\n            type=\"submit\"\n            className=\"mt-4 w-full py-2 text-white font-bold rounded bg-indigo-600 hover:bg-indigo-700 focus:outline-none\"\n          >\n            Register\n          </button>\n        </form>\n      ) : (\n        <form onSubmit={handleTeamRegister}>\n          <label htmlFor=\"teamName\" className=\"block text-sm font-medium text-gray-700\">Team Name</label>\n          <input\n            type=\"text\"\n            id=\"teamName\"\n            value={teamName}\n            onChange={(e) => setTeamName(e.target.value)}\n            required\n            className=\"mt-1 p-2 border border-gray-300 rounded w-full\"\n          />\n          <label className=\"block text-sm font-medium text-gray-700 mt-2\">Team Members</label>\n          {teamMembers.map((member, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              placeholder={`Member ${index + 1} Name`}\n              value={member}\n              onChange={(e) => handleTeamMemberChange(index, e.target.value)}\n              className=\"mt-1 p-2 border border-gray-300 rounded w-full mb-1\"\n              required\n            />\n          ))}\n          <button\n            type=\"submit\"\n            className=\"mt-4 w-full py-2 text-white font-bold rounded bg-indigo-600 hover:bg-indigo-700 focus:outline-none\"\n          >\n            Register Team\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default EventRegistrationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}